openapi: 3.0.1
info:
  title: webAPI
  description: Website API Server
  version: 1.0.0
servers:
  - url: /api/v1
tags:
  - name: Users
    description: User management endpoints
  - name: Events
    description: Event management endpoints
paths:
  /users:
    get:
      tags:
        - Users
      summary: List all users
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      tags:
        - Users
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: New user created
  /users/{userId}:
    get:
      tags:
        - Users
      summary: Get a user by ID
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A user object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
    put:
      tags:
        - Users
      summary: Update a user
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated
        '404':
          description: User not found
    delete:
      tags:
        - Users
      summary: Delete a user
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: User deleted
        '404':
          description: User not found
  /events:
    get:
      tags:
        - Events
      summary: List all events
      responses:
        '200':
          description: A list of events
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
    post:
      tags:
        - Events
      summary: Create a new event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        '201':
          description: New event created
  /events/{eventId}:
    get:
      tags:
        - Events
      summary: Get an event by ID
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: An event object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '404':
          description: Event not found
    put:
      tags:
        - Events
      summary: Update an event
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        '200':
          description: Event updated
        '404':
          description: Event not found
    delete:
      tags:
        - Events
      summary: Delete an event
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Event deleted
        '404':
          description: Event not found
components:
  schemas:
    Event:
      type: object
      required:
        - Name
        - Description
        - ClosureDate
        - FinalDate
        - FacultyID
      properties:
        ID:
          type: integer
          format: int64
          readOnly: true
        Name:
          type: string
        Description:
          type: string
        ClosureDate:
          type: string
          format: date-time
        FinalDate:
          type: string
          format: date-time
        CreatedAt:
          type: string
          format: date-time
          readOnly: true
        UpdatedAt:
          type: string
          format: date-time
          readOnly: true
        FacultyID:
          type: integer
          format: int64
    User:
      type: object
      required:
        - Name
        - Password
        - Salt
        - Email
        - RoleID
      properties:
        ID:
          type: integer
          format: int64
          readOnly: true
        Name:
          type: string
        Password:
          type: string
          writeOnly: true
        Salt:
          type: string
          writeOnly: true
        Email:
          type: string
        Phone:
          type: string
          nullable: true
        Address:
          type: string
          nullable: true
        CreatedAt:
          type: string
          format: date-time
          readOnly: true
        UpdatedAt:
          type: string
          format: date-time
          readOnly: true
        RoleID:
          type: integer
          format: int64
        FacultyID:
          type: integer
          format: int64
          nullable: true
